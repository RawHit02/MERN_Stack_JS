//Question -> Create a person Type , Person can have Id,Name, City and it has a function to print the person details, There would be another type Employee and Employee has Salary, Bonus , Dept also it has Function to print the Employee Details , the Employee Function must be linked with Person
//New Mechanism by ES6 Class Style

class A{

}
typeof A

class person{
    constructor(id,name,city){
        this.id = id;
        this.name = name;
        this.city = city;
    }
    persondetails(){
        console.log(`Id is ${this.id} Name is ${this.name} city is ${this.city}`);
    }
}
class Employee extends person{
    constructor(id,name, city,salary,bonus,dept){
        super(id,name,city);
        this.salary = salary;
        this.bonus = bonus;
        this.dept = dept;
    }
    employeedetails(){
        super.persondetails();
        console.log(`Salary ${this.salary} Bonus ${this.bonus} Dept ${this.dept}`);
    }
}
typeof person
typeof Employee
person.prototype;
Employee.prototype;
Employee.prototype.__proto__ == person.prototype;
var ro = new Employee(1001,'rohit','Doon',9000000,2133,'CSE');
ro.employeedetails();
class Q{
    static show(){
        console.log("Q show");
    }
}

typeof Q;

function T(){
    console.log("T");
}


function T(){
    console.log("T");
}

T.show = function(){
    console.log("SHOW");
}

T.show();


var w = new Object();


w;

typeof w;

var w = new Object();


typeof w;


//This is called prototype channing This is the new techniques to determine the question with the prototype




// # another way of solving
//Type of OBJECT BINDING



function whoAmI(){
    console.log('I am ', this);
}


typeof whoAmI;


whoAmI(); //window bind

window.whoAmI();

  //Object Binding
// 1> Default binding -> Binds with the window direct
// 2> Implicit binding -> function binds with theobject


var obj ={
    name:'rohit',
    city:'Doon',
    show(){
        console.log('I am' , this);
    }
}


obj.show();


//function binds with the obhect here thats called Implicit binding
whoAmI();

var w = new whoAmI();

w;

//this is called Explicit Binding 


var x = {
    name:'tim'}


var y={
    name:'kim'}


whoAmI.call(x);


window.whoAmI.call(x);


window.whoAmI.call(y);

//this is called Bydefault binding this can binds with anyone


function whoAmI(){
    console.log('I am ', this);
}


window.whoAmI.call(x);

function whoAmI(){
    console.log('I am ', this,a,b,c);
}

window.whoAmI.call(y,23,24,23);


window.whoAmI.call(x,23,24,23);


function whoAmI(a,b,c){
    console.log('I am ', this,a,b,c);
}

window.whoAmI.call(x,23,24,23);


  //Object Binding
// 1> Default binding -> Binds with the window direct
// 2> Implicit binding -> function binds with theobject
// 3> Explicit binding -> with parameters using this with parameter and parameters inside the function using new(keyword) like above


// Explicit binding ways to define 1->new(everytime it will make new Objects) 2->call(c->comma Seperated)(it will call the functions 3-> using apply(A->array 

//foe e.g


var w = new whoAmI();


window.whoAmI.call(x,23,24,23);

window.whoAmI.apply(y,[23,24,23]);


whoAmI.bind(y);


//Another way of explicit is bind

var g = whoAmI.bind(y);


// Explicit binding ways to define 1->new(everytime it will make new Objects) 2->call(binding+invoice)then->(c->comma Seperated)(it will call the functions 3-> using apply(binding+invoice)->(A->array) 4-> bind -> binding only  do call later and it do invoice with call only

g(1000,222,111);


//Here we can see that it is bindint the values later using g();

var g = whoAmI.bind(y); // this is called bindin

g(1000,222,111); //this is invoice calling anythime


var g2 = whoAmI.bind(x);


window.whoAmI.call(y,23,24,23);
VM1277:16 Id is 1001 Name is rohit city is Doon
VM1277:28 Salary 9000000 Bonus 2133 Dept CSE
VM1277:56 SHOW
VM1277:161 I am  Window {window: Window, self: Window, document: document, name: '', location: Location, …} undefined undefined undefined
VM1277:161 I am  Window {window: Window, self: Window, document: document, name: '', location: Location, …} undefined undefined undefined
VM1277:106 I am {name: 'rohit', city: 'Doon', show: ƒ}
VM1277:161 I am  Window {window: Window, self: Window, document: document, name: '', location: Location, …} undefined undefined undefined
VM1277:161 I am  whoAmI {} undefined undefined undefined
VM1277:161 I am  {name: 'tim'} undefined undefined undefined
VM1277:161 I am  {name: 'tim'} undefined undefined undefined
VM1277:161 I am  {name: 'kim'} undefined undefined undefined
VM1277:161 I am  {name: 'tim'} undefined undefined undefined
VM1277:161 I am  {name: 'kim'} 23 24 23
VM1277:161 I am  {name: 'tim'} 23 24 23
VM1277:161 I am  {name: 'tim'} 23 24 23
VM1277:161 I am  whoAmI {} undefined undefined undefined
VM1277:161 I am  {name: 'tim'} 23 24 23
VM1277:161 I am  {name: 'kim'} 23 24 23
VM1277:161 I am  {name: 'kim'} 1000 222 111
VM1277:161 I am  {name: 'kim'} 1000 222 111
VM1277:161 I am  {name: 'kim'} 23 24 23
VM62:210 Uncaught SyntaxError: Unexpected identifier 'Id'
function whoAmI(){
    console.log('I am ', this);
}

undefined
function whoAmI(x){
    console.log('I am ', this);
}

undefined
window.whoAmI.call(x);
VM137:1 Uncaught ReferenceError: x is not defined
    at <anonymous>:1:20
(anonymous) @ VM137:1
whoAmI
ƒ whoAmI(x){
    console.log('I am ', this);
}
function whoAmI(x){
    console.log('I am ', this,x,y,z);
}

undefined
whoAmI
ƒ whoAmI(x){
    console.log('I am ', this,x,y,z);
}
console.dir(whoAmI);
VM260:1 ƒ whoAmI(x)
undefined
whoAmI.__proto__ == Function.prototype;
true
Function.prototype;
ƒ () { [native code] }
console.dir(Function.prototype);
VM461:1 ƒ anonymous()
undefined
//This binding is variously deivided among all the objects 
undefined
window.whoAmI.call(x,20,309,2121);
VM755:1 Uncaught ReferenceError: x is not defined
    at <anonymous>:1:20
(anonymous) @ VM755:1
var x = "rohit"
undefined
window.whoAmI.call(x,20,309,2121);
VM202:2 Uncaught ReferenceError: y is not defined
    at String.whoAmI (<anonymous>:2:33)
    at <anonymous>:1:15
whoAmI @ VM202:2
(anonymous) @ VM883:1
window.whoAmI.call(x,20,309,2121);
VM202:2 Uncaught ReferenceError: y is not defined
    at String.whoAmI (<anonymous>:2:33)
    at <anonymous>:1:15
whoAmI @ VM202:2
(anonymous) @ VM911:1
